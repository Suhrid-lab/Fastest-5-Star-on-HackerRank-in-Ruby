# Initialize 3 variables here as explained in the problem statement
empty_hash = Hash.new
default_hash = Hash.new(1)
hackerrank = Hash.new
hackerrank = {"simmy" => 100, "vivmbbs" => 200}

unless defined? empty_hash
    puts "variable named `empty_hash` is not defined"
    exit 0
else
    puts "variable named `empty_hash` is defined!"
end

unless empty_hash.is_a? Hash
    puts "`empty_hash` must belong to the class `Hash`"
    exit 0
else
    puts "`empty_hash` variable belongs to the class `Hash`!"
end

unless 0 == empty_hash.size
    puts "`empty_hash` must be of size 0"
    exit 0
else
    puts "`empty_hash` variable is of size 0!"
end

unless empty_hash.default.nil?
    puts "`empty_hash` default value is not nil"
    exit 0
else
    puts "`empty_hash` variable's default value is nil!"
end

unless defined? default_hash
    puts "variable named `default_hash` is not defined"
    exit 0
else
    puts "variable named `default_hash` is defined!"
end

unless default_hash.is_a? Hash
    puts "`default_hash` must belong the class `Hash`"
    exit 0
else
    puts "`default_hash` variable belongs to the class `Hash`!"
end

unless 0 == default_hash.size
    puts "`default_hash` must be of size 0"
    exit 0
else
    puts "`default_hash` variable is of size 0!"
end

unless 1 == default_hash.default
    puts "`default_hash`'s default value is not 1"
    exit 0
else
    puts "`default_hash`'s default value is 1!"
end

unless defined? hackerrank
    puts "`hackerrank` variable is not defined"
    exit 0
else
    puts "`hackerrank` variable is defined!"
end

unless hackerrank.is_a? Hash
    puts "`hackerrank` variable must belong to the class `Hash`"
    exit 0
else
    puts "`hackerrank` variable belongs to the class `Hash`!"
end

unless hackerrank.default.nil?
    puts "`hackerrank` variable's default value is not nil"
    exit 0
else
    puts "`hackerrank` variable's default value is nil!"
end

unless hackerrank.has_key? "simmy"
    puts "`hackerrank` has no key named `simmy`"
    exit 0
else
    puts "`hackerrank` has a key named `simmy`!"
end

unless 100 == hackerrank["simmy"]
    puts "hackerrank[\"simmy\"] value is not 100"
    exit 0
else
    puts "hackerrank[\"simmy\"] = 100!"
end

unless hackerrank.has_key? "vivmbbs"
    puts "`hackerrank` has no key named `vivmbbs`"
    exit 0
else
    puts "`hackerrank` has a key named `vivmbbs`!"
end

unless 200 == hackerrank["vivmbbs"]
    puts "hackerrank[\"vivmbbs\"] value is not 200"
    exit 0
else
    puts "hackerrank[\"vivmbbs\"] = 200!"
end

unless 2 == hackerrank.size
    puts "`hackerrank` key value pair size is not 2"
    exit 0
else
    puts "`hackerrank` key value pair size is 2!"
end
