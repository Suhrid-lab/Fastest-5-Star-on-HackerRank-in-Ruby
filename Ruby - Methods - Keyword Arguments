$hash = {   k_to_c: Proc.new { |k| k - 273.15 } ,
            f_to_c: Proc.new { |f| (f - 32) * 5.0/9.0},
            c_to_f: Proc.new { |c| c * 5.0/9.0 + 32},
            c_to_k: Proc.new { |c| c + 273.15},
            k_to_f: Proc.new { |k| k * 5.0/9.0 + 32 + 273.15},
            f_to_k: Proc.new { |f| (f - 32) * 5.0/9.0 + 273.15}
}

def convert_temp (temp, input_scale: 'kelvin', output_scale: 'celsius')
    return temp if input_scale == output_scale
    sym = "#{input_scale[0]}_to_#{output_scale[0]}".to_sym
    proc = $hash[sym]
    if proc
      proc.call(temp)
    else
      temp
    end
end


unless Object.respond_to?(:convert_temp, true)
  puts 'You must define the correct method!'
  exit(0)
end

o1 = convert_temp(0, input_scale: 'kelvin', output_scale: 'celsius')
o2 = convert_temp(393, input_scale: 'kelvin', output_scale: 'celsius')
o3 = convert_temp(400, input_scale: 'fahrenheit', output_scale: 'celsius')
o4 = convert_temp(333, input_scale: 'fahrenheit', output_scale: 'kelvin')

a1, a2, a3, a4 = -273.15, 119.85, 204.4444, 440.372

unless [o1 - a1, o2 - a2, o3 - a3, o4 - a4].all? { |x| x.abs < 0.001 }
  puts 'Something went wrong! Please check your answers!'
  exit(0)
end

puts 'You have succesfully completed the challenge!'
